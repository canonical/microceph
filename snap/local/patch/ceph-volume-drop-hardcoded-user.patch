Description: Drop use of hard coded 'ceph' username in `ceph-volume`
 I suspect upstream has done this deliberately in their move from running
 as root to a non-root user back in the Jewel timeframe.
 .
 However, when running under a Mandatory Access Control regime such as AppArmor
 as enforced by a strict confined snap, the point of running as non-root user
 becomes moot.
Forwarded: not-needed
Origin: self
Author: Frode Nordahl <frode.nordahl@canonical.com>

diff -ru ceph-15.2.3.orig/src/ceph-volume/ceph_volume/tests/util/test_prepare.py ceph-15.2.3/src/ceph-volume/ceph_volume/tests/util/test_prepare.py
--- ceph-15.2.3.orig/src/ceph-volume/ceph_volume/tests/util/test_prepare.py	2020-05-29 16:24:50.000000000 +0000
+++ ceph-15.2.3/src/ceph-volume/ceph_volume/tests/util/test_prepare.py	2020-10-24 09:10:04.114077546 +0000
@@ -136,8 +136,6 @@
     '--osd-data',
     '--osd-journal',
     '--osd-uuid',
-    '--setuser', 'ceph',
-    '--setgroup', 'ceph'
 ]
 
 
@@ -336,7 +334,7 @@
             '--keyfile', '-', '--osd-data', '/var/lib/ceph/osd/ceph-1/',
             '--osd-journal', '/var/lib/ceph/osd/ceph-1/journal',
             '--osd-uuid', 'asdf-1234',
-            '--setuser', 'ceph', '--setgroup', 'ceph'])
+            ])
         assert expected in str(error.value)
 
 
@@ -364,7 +362,7 @@
             '-i', '1', '--monmap', '/var/lib/ceph/osd/ceph-1/activate.monmap',
             '--keyfile', '-', '--osd-data', '/var/lib/ceph/osd/ceph-1/',
             '--osd-uuid', 'asdf-1234',
-            '--setuser', 'ceph', '--setgroup', 'ceph'])
+            ])
         assert expected in str(error.value)
 
 
diff -ru ceph-15.2.3.orig/src/ceph-volume/ceph_volume/util/prepare.py ceph-15.2.3/src/ceph-volume/ceph_volume/util/prepare.py
--- ceph-15.2.3.orig/src/ceph-volume/ceph_volume/util/prepare.py	2020-05-29 16:24:50.000000000 +0000
+++ ceph-15.2.3/src/ceph-volume/ceph_volume/util/prepare.py	2020-10-24 09:08:52.949104807 +0000
@@ -430,8 +430,6 @@
     supplementary_command = [
         '--osd-data', path,
         '--osd-uuid', fsid,
-        '--setuser', 'ceph',
-        '--setgroup', 'ceph'
     ]
 
     if keyring is not None:
@@ -493,8 +491,6 @@
         '--osd-data', path,
         '--osd-journal', journal,
         '--osd-uuid', fsid,
-        '--setuser', 'ceph',
-        '--setgroup', 'ceph'
     ])
 
     _, _, returncode = process.call(
diff -ru ceph-15.2.3.orig/src/ceph-volume/ceph_volume/util/system.py ceph-15.2.3/src/ceph-volume/ceph_volume/util/system.py
--- ceph-15.2.3.orig/src/ceph-volume/ceph_volume/util/system.py	2020-05-29 16:24:50.000000000 +0000
+++ ceph-15.2.3/src/ceph-volume/ceph_volume/util/system.py	2020-10-24 10:07:13.184239240 +0000
@@ -75,10 +75,10 @@
     Return the id and gid of the ceph user
     """
     try:
-        user = pwd.getpwnam('ceph')
+        user = pwd.getpwnam('root')
     except KeyError:
         # is this even possible?
-        raise RuntimeError('"ceph" user is not available in the current system')
+        raise RuntimeError('"root" user is not available in the current system')
     return user[2], user[3]
 
 
@@ -117,10 +117,10 @@
     """
     uid, gid = get_ceph_user_ids()
     if os.path.islink(path):
-        process.run(['chown', '-h', 'ceph:ceph', path])
+        process.run(['chown', '-h', '{}:{}'.format(uid, gid), path])
         path = os.path.realpath(path)
     if recursive:
-        process.run(['chown', '-R', 'ceph:ceph', path])
+        process.run(['chown', '-R', '{}:{}'.format(uid, gid), path])
     else:
         os.chown(path, uid, gid)
 
