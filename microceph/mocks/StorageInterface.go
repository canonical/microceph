// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	api "github.com/canonical/lxd/shared/api"
	mock "github.com/stretchr/testify/mock"
)

// StorageInterface is an autogenerated mock type for the StorageInterface type
type StorageInterface struct {
	mock.Mock
}

// GetStorage provides a mock function with given fields:
func (_m *StorageInterface) GetStorage() (*api.ResourcesStorage, error) {
	ret := _m.Called()

	var r0 *api.ResourcesStorage
	var r1 error
	if rf, ok := ret.Get(0).(func() (*api.ResourcesStorage, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *api.ResourcesStorage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.ResourcesStorage)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewStorageInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewStorageInterface creates a new instance of StorageInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStorageInterface(t mockConstructorTestingTNewStorageInterface) *StorageInterface {
	mock := &StorageInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
